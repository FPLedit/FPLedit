<!--
  FPLedit Build Process
  Common build properties for all projects.
  (c) Manuel Huber 2020
-->

<Project>
  
  <PropertyGroup>
    <!-- Include own build tool -->
    <CoreCompileDependsOn>GenerateVersionInfoTarget;$(CoreCompileDependsOn)</CoreCompileDependsOn>
  </PropertyGroup>

  <UsingTask TaskName="GenerateVersionInfo" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <PVersionUpTo ParameterType="System.String" Required="true" />
      <PVersionFrom ParameterType="System.String" Required="true" />
      <DisplayVersion ParameterType="System.String" Required="true" />
      <VersionSuffix ParameterType="System.String" Required="false" />
      <Output ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        var code = @"internal static class Vi
{ 
    public const string PUpTo = """ + PVersionUpTo + @"""; // Compatible up to (normally Version without patch)
    public const string PVersion = """ + PVersionFrom + @"""; // Version of plugin (normally equasls assembly major.minor.patch)
    public const string PFrom = """ + PVersionFrom + @"""; // Compatible from - normally equals assembly version
    
    public const string DisplayVersion = """ + DisplayVersion + @""";
    public const string VersionSuffix = """ + VersionSuffix + @""";
}";
        File.WriteAllText(Output, code);
]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="GenerateVersionInfoTarget" DependsOnTargets="_GenerateVersionInfoTarget">
    <ItemGroup>
      <Compile Include="$(IntermediateOutputPath)VersionInfo.g.cs" />
    </ItemGroup>
  </Target>
  <Target Name="_GenerateVersionInfoTarget" Outputs="$(IntermediateOutputPath)VersionInfo.g.cs">
    <GenerateVersionInfo 
      PVersionUpTo="$([System.Version]::Parse($(VersionPrefix)).ToString(2))" 
      PVersionFrom="$([System.Version]::Parse($(VersionPrefix)).ToString(3))" 
      DisplayVersion="$(Version)"
      VersionSuffix="$(VersionSuffix)"
      Output="$(IntermediateOutputPath)VersionInfo.g.cs" />
  </Target>

</Project>