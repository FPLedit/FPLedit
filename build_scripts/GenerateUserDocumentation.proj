<!--
  FPLedit Build Process
  Common build properties for all projects.
  (c) Manuel Huber 2020
-->

<Project>
  <!--
  * THE FOLLOWING CODE IS SPECIFIC TO THE FPLEDIT USER DOCUMENTATION REPO STRUCTURE
  * DO NOT USE IT OTHERWISE
  *
  * IT WILL NOT BUILD IF ENV VARIABLE FPLEDIT_DOK IS NOT SET.
  -->
  
  <!-- Set parameters -->
  <PropertyGroup>
    <OfflineDoc_BuildPdf>true</OfflineDoc_BuildPdf>
    <OfflineDoc_PdfOutputFile>$(OutputPath)/Dokumentation.pdf</OfflineDoc_PdfOutputFile>
    <OfflineDoc_SiteFolder>$(FPLEDIT_DOK)</OfflineDoc_SiteFolder>
  </PropertyGroup>

  <!-- Default target for msbuild -->
  <Target Name="Build" DependsOnTargets="OfflineDoc_Build" />

  <!-- Generation targets, generic -->
  <Target Name="OfflineDoc_Build" DependsOnTargets="_OfflineDoc_HugoTransform">
    <Message IsCritical="true" Importance="high" Text="$(OfflineDoc_OutputFolder)" />
    <_OfflineDoc_EmbedOfflineFilesTask
      InputFile="$([System.IO.Path]::Combine( $(OfflineDoc_OutputFolder), 'offline-idx.html' ))"
      ContentFolder="$([System.IO.Path]::Combine( '$(OfflineDoc_SiteFolder)', 'content' ))"
      OutputFile="$(OfflineDoc_HtmlOutputFile)"
      UrlBase="https://fahrplan.manuelhu.de" />
    <Exec
      Condition=" $(OfflineDoc_BuildPdf) == 'true' "
      Command="pandoc $([System.IO.Path]::GetFileName( '$(OfflineDoc_HtmlOutputFile)' ) ) -f html+tex_math_dollars -t latex --template=../template --pdf-engine=xelatex --toc --metadata-file=offline-latex.tex -N -o $([System.IO.Path]::GetFullPath( $(OfflineDoc_PdfOutputFile) ) )"
      WorkingDirectory="$([System.IO.Path]::GetDirectoryName( '$(OfflineDoc_HtmlOutputFile)' ) )" />
  </Target>

  <!-- Internal targets -->
  <Target Name="_OfflineDoc_PrepareProperties">
    <PropertyGroup>
      <OfflineDoc_SiteFolder Condition=" $(OfflineDoc_SiteFolder) == '' ">.</OfflineDoc_SiteFolder>
      <OfflineDoc_OutputFolder>$([System.IO.Path]::Combine( '$(OfflineDoc_SiteFolder)', 'public' ))</OfflineDoc_OutputFolder>
      <OfflineDoc_ContentFolder>$([System.IO.Path]::Combine( '$(OfflineDoc_SiteFolder)', 'content' ))</OfflineDoc_ContentFolder>
      <OfflineDoc_HtmlOutputFile Condition=" $(OfflineDoc_HtmlOutputFile) == '' ">$([System.IO.Path]::Combine( $(OfflineDoc_OutputFolder), 'offline-doc.html' ))</OfflineDoc_HtmlOutputFile>
      <OfflineDoc_PdfOutputFile Condition=" $(OfflineDoc_PdfOutputFile) == '' ">$([System.IO.Path]::Combine( $(OfflineDoc_OutputFolder), 'offline-doc.pdf' ))</OfflineDoc_PdfOutputFile>
    </PropertyGroup>
  </Target>

  <Target Name="_OfflineDoc_HugoTransform" DependsOnTargets="_OfflineDoc_PrepareProperties">
    <Exec Command="hugo -s $(OfflineDoc_SiteFolder) -d $(OfflineDoc_OutputFolder)" />
  </Target>

  <UsingTask TaskName="_OfflineDoc_EmbedOfflineFilesTask" AssemblyFile="./FPLedit.Build.task.dll" />

</Project>
